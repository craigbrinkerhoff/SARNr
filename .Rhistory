validation_data$rel_insitu_wc <- validation_data$wc_respiration_gC_m2_yr / ((validation_data$sediment_respiration_gC_m2_yr+validation_data$wc_respiration_gC_m2_yr+validation_data$photomineralization_gC_m2_yr))
#Calculate realtive contriubtions of benthic CO2 and wc CO2 using calibrated parameters
lakes$relative_benthic <- 1.586452 / (lakes$Cwc_lake_ppm + 1.586452)
lakes$relative_wc <- lakes$Cwc_lake_ppm / (lakes$Cwc_lake_ppm + 1.586452)
wc_plot <- ggplot(lakes) +
geom_point(aes(x=HRT_s/(60*60*24), y=relative_wc)) +
geom_point(data=validation_data, aes(x=lake_hrt_yr*365, y=rel_insitu_wc, color=waterbody, pch=study), size=8)+
# geom_smooth(data=validation_data, aes(x=lake_hrt_yr*365, y=rel_insitu_wc), method='lm')+
annotate('text', x=10, y=0.85, label='Black dots are our calibrated\nmodel for Northeastern US')+
scale_x_log10(limits = c(10^0, 10^4),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
ylab('Relative CO2 contribution from\n water-column respiration') +
xlab('Lake residence time [dys]') +
ggtitle('Lakes/Reservoirs (Quebec, Sweden, Finland)')
bz_plot <- ggplot(lakes) +
geom_point(aes(x=HRT_s/(60*60*24), y=relative_benthic)) +
geom_point(data=validation_data, aes(x=lake_hrt_yr*365, y=rel_insitu_sediment, color=waterbody, pch=study), size=8)+
annotate('text', x=10, y=0.85, label='Black dots are our calibrated\nmodel for Northeastern US')+
scale_x_log10(limits = c(10^0, 10^4),
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
ylab('Relative CO2 contribution from\n water-column respiration') +
xlab('Lake residence time [dys]') +
ggtitle('Lakes/Reservoirs (Quebec, Sweden, Finland)')
wc_plot
View(validation_data)
View(hydrography)
View(lakes)
346.68+654.24+26+16
346.68+654.24+26+16+10+3.05+10+10+10
346.68+654.24+26+16+10+3.05+10+10+10+200.98
346.68+654.24+26+16+200.98
346.68+654.24+26+16+200.98-16-26
346.68+654.24+26+16+200.98
1243.9+43.05
source("~/.active-rstudio-document", echo=TRUE)
dem <- st_read('C:\\Users\\craig\\Downloads\\DEM_fin_20201009_045732_0f17.shp')
dem <- rast('C:\\Users\\craig\\Downloads\\DEM_fin_20201009_045732_0f17.tif')
rivnet_t <- vect(rivnet)
elevations <- extract(dem, rivnet_t)
View(rivnet_t)
plot(rivnet_t)
elevations <- extract(dem, rivnet)
View(rivnet_t)
elevations <- extract(dem, rivnet_t)
View(elevations)
plot(dem)
plot(rivnet)
plot(rivnet_t)
rivnet_t
View(rivnet)
rivnet_t[[1]]
rivnet_t[1]
elevations <- extract(dem, rivnet_t[1])
View(elevations)
dem
elevations <- extract(dem, rivnet_t[10])
elevations <- extract(dem, rivnet_t[10], na.rm=T)
elevations <- extract(dem, rivnet_t[10], fun='mean',na.rm=T)
source("~/.active-rstudio-document", echo=TRUE)
View(elevations)
elevations <- extract(dem, rivnet[10])
View(elevations)
elevations <- extract(dem, rivnet)
View(elevations)
View(rivnet)
rivnet_sf <- st_read('C:\\Users\\craig\\Downloads\\hydrography_20201009_045732_0f17.shp')
View(rivnet_sf)
View(elevations)
max_elev <- extract(dem, rivnet, fun='max')
min_elev <- extract(dem, rivnet, fun='min')
library(dplyr)
slopes <- left_join(max_elev, min_elev)
View(slopes)
max_elev <- extract(dem, rivnet, fun='max')
colnames(max_elev) <- c('row', 'max_elv_m')
min_elev <- extract(dem, rivnet, fun='min')
colnames(min_elev) <- c('row', 'min_elv_m'
View(max_elev)
colnames(min_elev) <- c('row', 'min_elv_m')
View(max_elev)
slopes <- left_join(max_elev, min_elev, by='row')
View(slopes)
rivnet_sf <- rbind(rivnet_sf, slopes)
source("~/.active-rstudio-document", echo=TRUE)
rivnet_sf <- cbind(rivnet_sf, slopes)
View(rivnet_sf)
source("~/.active-rstudio-document", echo=TRUE)
View(rivnet_sf)
View(slopes)
source("~/.active-rstudio-document", echo=TRUE)
View(slopes)
rivnet_sf$slope <- (slopes$max_elv_m - slopes$min_elv_m) / rivnet_sf$lngth_m
source("~/.active-rstudio-document", echo=TRUE)
View(rivnet_sf)
plot(rivnet_sf$slope)
summary(rivnet_sf$slope)
exp(-3.5)
log(0.03)
exp(-3.5 + (0.25^2/2))
log(0.03)
log(0.031)
2*log(mu)-0.5*log(0.03^2+0.01^2)
2*log(0.03)-0.5*log(0.03^2+0.01^2)
exp(0.25)
2*log(0.03)-0.5*log(0.03^2+1.28^2)
2*log(0.03)-0.5*log(0.03^2+0.25^2)
2*log(0.03)-0.5*log(0.03^2+0.05^2)
2*log(0.03)-0.5*log(0.03^2+0.001^2)
log(0.001)
exp(0.25)
2*log(0.03)-0.5*log(0.03^2+1.28^2)
log(0.01)
1.28^2
1.67^2
logQ =  (delta*log(Wobs))-(1.67*r*logWb)+(1.67*logDb)-(1.67*log((r+1)/r))-(logn)+(0.5*log(Sobs))
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
exp(logQ)
exp(logQ_2)
logQ_2 <- (1/b)*log(Wobs) + (1/b)*log(a)
logQ_2 <- (1/b)*log(Wobs) + (1/b)*log(1/a)
exp(logQ)
exp(logQ_2)
logWobs = (1/(1.67*r)+ 1) *
((logQ) +
(log(n))    -
(1.67*log(Db))  +
(1.67*(log((r+1)/r))) +
(1.67*r*log(Wb))  -
(0.5*(log(Sobs)))
);
log(Wobs)
source("~/.active-rstudio-document", echo=TRUE)
Wobs_stan = exp( (1/(1.67*r)+ 1) *
((logQ) +
(log(n))    -
(1.67*log(Db))  +
(1.67*(log((r+1)/r))) +
(1.67*r*log(Wb))  -
(0.5*(log(Sobs)))
))
logWobs = (1/(1.67*r)+ 1) *
((logQ) +
(log(n))    -
(1.67*log(Db))  +
(1.67*(log((r+1)/r))) +
(1.67*r*log(Wb))  -
(0.5*(log(Sobs)))
);
exp(Wobs)
log(Wobs)
source("~/.active-rstudio-document", echo=TRUE)
logWobs_2 <- b*logQ_2 + loga
logWobs_2 <- b*logQ_2 + log(a)
exp(Wobs)
log(Wobs)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
#truth
log(Wobs)
#stan
logWobs_colin = (1/(1.67*r+ 1)) *
((logQ_colin) +
(log(n))    -
(1.67*log(Db))  +
(1.67*(log((r+1)/r))) +
(1.67*r*log(Wb))  -
(0.5*(log(Sobs)))
);
source("~/colinMath.R", echo=TRUE)
(1/(1.67*r+ 1))
(1/((1.67*r)+ 1))
(1/(1.67*r+ 1))
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
exp(logQ_colin)
exp(logQ_craig)
logQ_craig_detailed <- (1/b)*log(Wobs) + (1/b)*log(1/(Wb^((r+r*p)/delta))) + (1/b)*log(1/((1/Db)^((1+p)/delta))) + (1/b)*log(1/(((r+1)/r)^((1+p)/delta))) + (1/b)*log(1/(n^(1/delta))) + (1/b)*log(1/(Sobs^(-q/delta)))
source("~/colinMath.R", echo=TRUE)
logQ_craig_detailed <- (1/b)*log(Wobs) + (1/b)*(((r+r*p)/delta)))*log(1/Wb) + (1/b)*log(1/((1/Db)^((1+p)/delta))) + (1/b)*log(1/(((r+1)/r)^((1+p)/delta))) + (1/b)*log(1/(n^(1/delta))) + (1/b)*log(1/(Sobs^(-q/delta)))
logQ_craig_detailed <- (1/b)*log(Wobs) + (1/b)*(((r+r*p)/delta))*log(1/Wb) + (1/b)*log(1/((1/Db)^((1+p)/delta))) + (1/b)*log(1/(((r+1)/r)^((1+p)/delta))) + (1/b)*log(1/(n^(1/delta))) + (1/b)*log(1/(Sobs^(-q/delta)))
logQ_craig_detailed <- (1/b)*log(Wobs) + (1/b)*(((r+r*p)/delta))*log(1/Wb) + (1/b)*(((1+p)/delta))*log(1/(1/Db)) + (1/b)*log(1/(((r+1)/r)^((1+p)/delta))) + (1/b)*log(1/(n^(1/delta))) + (1/b)*log(1/(Sobs^(-q/delta)))
logQ_craig_detailed <- (1/b)*log(Wobs) +
(1/b)*(((r+r*p)/delta))*log(1/Wb) +
(1/b)*(((1+p)/delta))*log(1/(1/Db)) + (1/b)*((1+p)/delta)*log(1/(((r+1)/r))) + (1/b)*log(1/(n^(1/delta))) + (1/b)*log(1/(Sobs^(-q/delta)))
logQ_craig_detailed <- (1/b)*log(Wobs) +
(1/b)*(((r+r*p)/delta))*log(1/Wb) +
(1/b)*(((1+p)/delta))*log(1/(1/Db)) + (1/b)*((1+p)/delta)*log(1/(((r+1)/r))) + (1/b)*delta*log(1/n) + (1/b)*log(1/(Sobs^(-q/delta)))
logQ_craig_detailed <- (1/b)*log(Wobs) +
(1/b)*(((r+r*p)/delta))*log(1/Wb) +
(1/b)*(((1+p)/delta))*log(1/(1/Db)) + (1/b)*((1+p)/delta)*log(1/(((r+1)/r))) + (1/b)*(1/delta)*log(1/n) + (1/b)*(-q/delta)*log(1/Sobs)
#stan
logWobs_colin = (1/(1.67*r+ 1)) *
((logQ_colin) +
(log(n))    -
(1.67*log(Db))  -
(1.67*(log((r+1)/r))) +
(1.67*r*log(Wb))  -
(0.5*(log(Sobs)))
);
#Colin's equations
#reconstructed
logQ_colin =  (delta*log(Wobs))+(1.67*r*log(Wb))-(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
#Colin's equations
#reconstructed
logQ_colin =  (delta*log(Wobs))+(1.67*r*log(Wb))-(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
source("~/colinMath.R", echo=TRUE)
#Colin's equations
#reconstructed
logQ_colin =  (delta*log(Wobs))+(1.67*r*log(Wb))-(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
#Colin's equations
#reconstructed
logQ_colin =  (delta*log(Wobs))-(1.67*r*log(Wb))+(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
#Colin's equations
#reconstructed
logQ_colin =  (delta*log(Wobs))-(1.67*r*log(Wb))+(1.67*log(1/Db))-(1.67*log(1/((r+1)/r)))-(log(1/n))+(0.5*log(Sobs))
source("~/colinMath.R", echo=TRUE)
#Colin's equations
#reconstructed
logQ_colin =  (delta*log(Wobs))+(1.67*r*log(1/Wb))+(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
#Colin's equations
#reconstructed
logQ_colin =  (delta*log(Wobs))-(1.67*r*log(Wb))+(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
#Colin's equations
#reconstructed
logQ_colin =  (delta*log(Wobs))-(1.67*r*log(Wb))-(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
(1/b)*(((r+r*p)/delta))
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
(1/b)*(((r+r*p)/delta))
1.67*r*
)
(1/b)*(((1+p)/delta))
(1/b)*((1+p)/delta)
(1/b)*(1/delta)
(1/b)*(-q/delta)
source("~/colinMath.R", echo=TRUE)
logWobs_craig <- log(a) + b*logQ_craig_detailed
#truth
log(Wobs)
source("~/colinMath.R", echo=TRUE)
(log(n))
(delta*log(Wobs))
(1/b)*log(Wobs)
(1.67*r*log(Wb))
(1/b)*(((r+r*p)/delta))*log(1/Wb)
#Colin's equations
#reconstructed
logQ_colin = (delta*log(Wobs))+
(1.67*r*log(Wb))+
(1.67*log(Db))-
(1.67*log((r+1)/r))-
(log(n))+
(0.5*log(Sobs))
(1.67*r*log(Wb))
(1/b)*(((r+r*p)/delta))*log(1/Wb)
-
(1.67*r*log(Wb))
(1.67*log(Db))
(1/b)*(((1+p)/delta))*log(1/(1/Db))
(1.67*log((r+1)/r))
(1/b)*((1+p)/delta)*log(1/(((r+1)/r)))
#Colin's equations
#reconstructed
logQ_colin = (delta*log(Wobs)) -
(1.67*r*log(Wb)) +
(1.67*log(Db)) +
(1.67*log((r+1)/r)) -
(log(n))+
(0.5*log(Sobs))
#Colin's equations
#reconstructed
logQ_colin_orig = (delta*log(Wobs)) -
(1.67*r*log(Wb)) +
(1.67*log(Db)) -
(1.67*log((r+1)/r)) -
(log(n))+
(0.5*log(Sobs))
(1/b)*(((1+p)/delta))*log(1/(1/Db))
(1/b)*((1+p)/delta)*log(1/(((r+1)/r)))
(1.67*log((r+1)/r))
-
(1.67*log((r+1)/r))
(1.67*log(Db))
(1/b)*(((1+p)/delta))*log(1/(1/Db))
(1/b)*(1/delta)*log(1/n)
(log(n))
-
(log(n))
(1/b)*(-q/delta)*log(1/Sobs)
(0.5*log(Sobs))
logQ_colin = (delta*log(Wobs)) +
(-1*1.67*r*log(Wb)) +
(1.67*log(Db)) +
(-1*1.67*log((r+1)/r)) -
(log(n))+
(0.5*log(Sobs))
source("~/colinMath.R", echo=TRUE)
#truth
logWobs_true <- log(Wobs)
source("~/colinMath.R", echo=TRUE)
exp(logQ_colin)
exp(logQ_dingman)
exp(logQ_dingman_detailed)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
(delta*log(Wobs))
(1/b)*log(Wobs)
(-1*1.67*r*log(Wb))
(1/b)*(((r+r*p)/delta))*log(1/Wb)
(1.67*log(Db))
(1/b)*(((1+p)/delta))*log(1/(1/Db))
(-1*1.67*log((r+1)/r))
(1/b)*((1+p)/delta)*log(1/(((r+1)/r)))
(log(n))
(1/b)*(1/delta)*log(1/n)
(-1*log(n))
(1/b)*(1/delta)*log(1/n)
(0.5*log(Sobs))
(0.5*log(Sobs)
(delta*log(Wobs))
)
(delta*log(Wobs))
(1/b)*log(Wobs)
(-1*1.67*r*log(Wb))
1/b)*(((r+r*p)/delta))*log(1/Wb)
(1/b)*(((r+r*p)/delta))*log(1/Wb)
(1.67*log(Db))
(1/b)*(((1+p)/delta))*log(1/(1/Db))
(-1*1.67*log((r+1)/r))
(1/b)*((1+p)/delta)*log(1/(((r+1)/r)))
(-1*log(n))
(1/b)*(1/delta)*log(1/n)
(0.5*log(Sobs)
)
(1/b)*(-q/delta)*log(1/Sobs)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
df <- data.frame('r'=seq(1,20,1), 'Qcolin'=NA, 'Qdingman'=NA)
View(df)
#####################################################################################
df <- data.frame('r'=seq(1,20,1), 'Qcolin'=NA, 'Qdingman'=NA)
for(i in 1:nrow(df)){
df[i,]$Qcolin = (delta*log(Wobs))-(1.67*r*log(Wb))+(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
df[i,]$Qdingman <- (1/b)*log(Wobs) +
(1/b)*(((r+r*p)/delta))*log(1/Wb) +
(1/b)*(((1+p)/delta))*log(1/(1/Db)) +
(1/b)*((1+p)/delta)*log(1/(((r+1)/r))) +
(1/b)*(1/delta)*log(1/n) +
(1/b)*(-q/delta)*log(1/Sobs)
}
forPlot <- gather(df, key=key, value=value, c('Qcolin', 'Qdingman'))
forPlot <- tidyr::gather(df, key=key, value=value, c('Qcolin', 'Qdingman'))
ggplot(forPlot, aes(x=r, y=value, color=key)) +
geom_line()
library(ggplot2)
df <- data.frame('r'=seq(1,20,1), 'Qcolin'=NA, 'Qdingman'=NA)
for(i in 1:nrow(df)){
df[i,]$Qcolin = (delta*log(Wobs))-(1.67*r*log(Wb))+(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
df[i,]$Qdingman <- (1/b)*log(Wobs) +
(1/b)*(((r+r*p)/delta))*log(1/Wb) +
(1/b)*(((1+p)/delta))*log(1/(1/Db)) +
(1/b)*((1+p)/delta)*log(1/(((r+1)/r))) +
(1/b)*(1/delta)*log(1/n) +
(1/b)*(-q/delta)*log(1/Sobs)
}
forPlot <- gather(df, key=key, value=value, c('Qcolin', 'Qdingman'))
library(tidyr)
library(ggplot2)
df <- data.frame('r'=seq(1,20,1), 'Qcolin'=NA, 'Qdingman'=NA)
for(i in 1:nrow(df)){
df[i,]$Qcolin = (delta*log(Wobs))-(1.67*r*log(Wb))+(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
df[i,]$Qdingman <- (1/b)*log(Wobs) +
(1/b)*(((r+r*p)/delta))*log(1/Wb) +
(1/b)*(((1+p)/delta))*log(1/(1/Db)) +
(1/b)*((1+p)/delta)*log(1/(((r+1)/r))) +
(1/b)*(1/delta)*log(1/n) +
(1/b)*(-q/delta)*log(1/Sobs)
}
forPlot <- gather(df, key=key, value=value, c('Qcolin', 'Qdingman'))
ggplot(forPlot, aes(x=r, y=value, color=key)) +
geom_line()
df <- data.frame('r'=seq(1,20,1), 'Qcolin'=NA, 'Qdingman'=NA)
for(i in 1:nrow(df)){
r <- df[i,]$r
df[i,]$Qcolin = (delta*log(Wobs))-(1.67*r*log(Wb))+(1.67*log(Db))-(1.67*log((r+1)/r))-(log(n))+(0.5*log(Sobs))
df[i,]$Qdingman <- (1/b)*log(Wobs) +
(1/b)*(((r+r*p)/delta))*log(1/Wb) +
(1/b)*(((1+p)/delta))*log(1/(1/Db)) +
(1/b)*((1+p)/delta)*log(1/(((r+1)/r))) +
(1/b)*(1/delta)*log(1/n) +
(1/b)*(-q/delta)*log(1/Sobs)
}
forPlot <- gather(df, key=key, value=value, c('Qcolin', 'Qdingman'))
ggplot(forPlot, aes(x=r, y=value, color=key)) +
geom_line()
View(df)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
View(df)
ggplot(forPlot, aes(x=r, y=exp(value), color=key)) +
geom_line()
View(df)
View(df)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
source("~/colinMath.R", echo=TRUE)
-5^(1/4)*5^(-1.4)
-5^(1/4)*5^(-1/4)
-5^(1/8)*5^(-1/8)
48/16
48/16
43/3
43/48
9/16
getwd()
changer::changer("C:\Users\craig\Documents\OneDrive - University of Massachusetts\Ongoing Projects\R_SARN", 'SARNr')
changer::changer("C:\\Users\craig\\Documents\\OneDrive - University of Massachusetts\\Ongoing Projects\\R_SARN", 'SARNr')
changer::changer('C:\\Users\craig\\Documents\\OneDrive - University of Massachusetts\\Ongoing Projects\\R_SARN', 'SARNr')
changer::changer('C:/Users\craig/Documents/OneDrive - University of Massachusetts/Ongoing Projects/R_SARN', 'SARNr')
changer::changer('\\Users\craig\\Documents\\OneDrive - University of Massachusetts\\Ongoing Projects\\R_SARN', 'SARNr')
changer::changer(paste0(getwd(), 'OneDrive - University of Massachusetts\\Ongoing Projects\\R_SARN'), 'SARNr')
changer::changer(paste0(getwd(), '\\OneDrive - University of Massachusetts\\Ongoing Projects\\R_SARN'), 'SARNr')
changer::changer(paste0(getwd(), '\\OneDrive - University of Massachusetts\\Ongoing Projects\\R_SARN'), 'SARNr')
SARNr::sarn_data(
)
library(SARNr)
sarn_data(x,y,z)
library(devtools)
install_github("craigbrinkerhoff/SARNr", ref='main', force=TRUE, build_vignettes = TRUE)
install_github("craigbrinkerhoff/SARNr", ref='main', force=TRUE, build_vignettes = TRUE)
library(SARNr)
SARNr::
vignette(SARNr)
vignette("introduction", package='SARNr')
vignette(package='SARNr')
library(SARNr)
sarn_data()
remove.packages('SARNr')
install_github("craigbrinkerhoff/SARNr", ref='main', force=TRUE, auth_token = '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')
library(SARNr)
sarn_data()
SARNr::sarn_data()
sessionInfo()
remove.packages('SARNr')
install_github("craigbrinkerhoff/SARNr", ref='main', force=TRUE, auth_token = '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')
library(SARNr)
sarn_data()
install_github("craigbrinkerhoff/SARNr", ref='main', force=TRUE, auth_token = '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')
install_github("craigbrinkerhoff/SARNr", ref='main', force=TRUE, auth_token = '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', build_vignettes = TRUE)
library(SARNr)
sarn_sata
sarn_data()
library(SARNr)
library(SARNr)
vignette(package='SARNr')
library(SARNr)
library(sf) #for vector processing
library(terra) #for raster processing
sessionInfo()
rivnet_dem <- st_read('data/DEM_rivnet_33333_20201009_045732_0f17.shp') #DEM river networks
dem_domain <- rast('data/dem_fin_20201009_045732_0f17.tif') #dem downscaled to 3m
image <- rast('data/PSScene4Band-20201009_045732_0f17.tif') #3m PlanetScope image
setwd('C:\\Users\\craig\\Documents\\OneDrive - University of Massachusetts\\Ongoing Projects\\SARNr')
rivnet_dem <- st_read('data/DEM_rivnet_33333_20201009_045732_0f17.shp') #DEM river networks
dem_domain <- rast('data/dem_fin_20201009_045732_0f17.tif') #dem downscaled to 3m
image <- rast('data/PSScene4Band-20201009_045732_0f17.tif') #3m PlanetScope image
rivnet_rs_rast <- sarn_classifyWater_unimodal(img = image,
dem = dem_domain,
maxElev = 4000) #water is ignored above this elevation (to remove snow/ice/glaciers)
data <- sarn_data(dem_network = rivnet_dem,
riverMask = rivnet_rs_rast,
dem = dem_domain) #create SARN object
joinedNetwork <- sarn_joinNetworks(data = data,
bufferSize=5) #join DEM and RS networks
warnings()
View(joinedNetwork)
sessionInfo()
plot(rivnet_rs_rast)
data <- sarn_data(dem_network = rivnet_dem,
riverMask = rivnet_rs_rast,
dem = dem_domain) #create SARN object
joinedNetwork <- sarn_joinNetworks(data = data,
bufferSize=5) #join DEM and RS networks
sessionInfo()
library(sf)
sf_use_s2()
sf_use_s2(TRUE)
joinedNetwork <- sarn_joinNetworks(data = data,
bufferSize=5) #join DEM and RS networks
sf_use_s2()
